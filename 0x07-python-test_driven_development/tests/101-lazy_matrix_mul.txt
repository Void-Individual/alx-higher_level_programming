The ''101-lazy_matrix_mul'' module
==============================

Using ''lazy_matrix_mul''
------------------------------

Import the function
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Testing matrices of correct values
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Testing matrices of correct values
    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Testing matrices of correct values with floats
    >>> lazy_matrix_mul([[1.0, 2.0]], [[3.0, 4.0], [5.0, 6.0]])
    [[13, 16]]

Testing m_a as a list of integers
    >>> lazy_matrix_mul([1, 2], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    TypeError: m_a must be a list of lists

Testing m_a as a string
    >>> lazy_matrix_mul('matrix', [[3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    TypeError: m_a must be a list

Testing m_b as a string
    >>> lazy_matrix_mul([[3, 4], [5, 6]], 'matrix')
    Traceback (most recent call last):
        . . .
    TypeError: m_b must be a list

Testing m_b as a list of integers
    >>> lazy_matrix_mul([[3, 4], [5, 6]], [1, 2])
    Traceback (most recent call last):
        . . .
    TypeError: m_b must be a list of lists

Testing m_a as an empty list
    >>> lazy_matrix_mul([], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    ValueError: m_a can't be empty

Testing m_b as an empty list
    >>> lazy_matrix_mul([[3, 4], [5, 6]], [])
    Traceback (most recent call last):
        . . .
    ValueError: m_b can't be empty

Testing m_a as a list with an empty list
    >>> lazy_matrix_mul([[]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    ValueError: m_a can't be empty

Testing m_b as a list with an empty list
    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[]])
    Traceback (most recent call last):
        . . .
    ValueError: m_b can't be empty

Testing m_a as a list of a list containing string
    >>> lazy_matrix_mul([['matrix']], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    TypeError: m_a should contain only integers or floats

Testing m_b as a list of a list containing string
    >>> lazy_matrix_mul([[3, 4], [5, 6]], [['matrix']])
    Traceback (most recent call last):
        . . .
    TypeError: m_b should contain only integers or floats

Testing m_a with rows of different sizes
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        . . .
    TypeError: each row of m_a must be of the same size

Testing m_b with rows of different sizes
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
        . . .
    TypeError: each row of m_b must be of the same size

Testing m_a column and m_b rows having different sizes
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6]])
    Traceback (most recent call last):
        . . .
    ValueError: m_a and m_b can't be multiplied
